% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/form-other.R
\name{form_estimate}
\alias{form_estimate}
\title{Create a pdqr-function for distribution of sample estimate}
\usage{
form_estimate(f, estimate, sample_size, ..., n_sample = 10000,
  args_new = list())
}
\arguments{
\item{f}{A pdqr-function.}

\item{estimate}{Estimate function. Should be able to accept numeric vector of
size \code{sample_size} and return single numeric output.}

\item{sample_size}{Size of sample for which distribution of sample estimate
is needed.}

\item{...}{Other arguments for \code{estimate}.}

\item{n_sample}{Number of elements to generate from distribution of sample
estimate.}

\item{args_new}{List of extra arguments for \link[=new-pdqr]{new_*()} function to
control \code{\link[=density]{density()}}.}
}
\value{
A pdqr-function of the same \link[=meta_class]{class} and
\link[=meta_type]{type} (if not forced otherwise in \code{args_new}) as \code{f}.
}
\description{
Based on pdqr-function, estimate function, and sample size describe the
distribution of sample estimate. This might be useful for statistical
inference.
}
\details{
General idea is to create a sample from target distribution by
generating \code{n_sample} samples of size \code{sample_size} and compute for each of
them its estimate by calling input \code{estimate} function. Created sample from
target distribution is used as input to \code{new_*()} of appropriate class with
\code{type} equal to type of \code{f} (if not forced otherwise in \code{args_new}).

\strong{Notes}:
\itemize{
\item This function may be very time consuming for large values of \code{n_sample} and
\code{sample_size}, as total of \code{n_sample*sample_size} numbers are generated and
\code{estimate} function is called \code{n_sample} times.
\item Output distribution might have a bias compared to true distribution of
sample estimate. One useful technique for bias correction: compute mean value
of estimate using big \code{sample_size} (with \code{mean(as_r(f)(sample_size))}) and
then recenter distribution to actually have that as a mean.
}
}
\examples{
set.seed(101)

# Type "fin"
d_fin <- new_d(data.frame(x = 1:4, prob = 1:4/10), "fin")
  # Estimate of distribution of mean
form_estimate(d_fin, estimate = mean, sample_size = 10)
  # To change type of output, supply it in `args_new`
form_estimate(
  d_fin, estimate = mean, sample_size = 10,
  args_new = list(type = "infin")
)

# Type "infin"
d_unif <- as_d(dunif)
  # Supply extra named arguments for `estimate` in `...`
plot(form_estimate(d_unif, estimate = mean, sample_size = 10, trim = 0.1))
lines(
  form_estimate(d_unif, estimate = mean, sample_size = 10, trim = 0.3),
  col = "red"
)
lines(
  form_estimate(d_unif, estimate = median, sample_size = 10),
  col = "blue"
)

}
